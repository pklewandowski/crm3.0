# Generated by Django 5.0.7 on 2024-07-27 12:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('attachment', '0001_initial'),
        ('attribute', '0001_initial'),
        ('dict', '0001_initial'),
        ('document', '0001_initial'),
        ('hierarchy', '0001_initial'),
        ('report', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='document',
            name='created_by',
            field=models.ForeignKey(db_column='id_created_by', on_delete=django.db.models.deletion.PROTECT, related_name='document_created_by', to=settings.AUTH_USER_MODEL, verbose_name='document.created_by'),
        ),
        migrations.AddField(
            model_name='document',
            name='hierarchy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hierarchy.hierarchy'),
        ),
        migrations.AddField(
            model_name='document',
            name='owner',
            field=models.ForeignKey(db_column='id_owner', on_delete=django.db.models.deletion.CASCADE, related_name='owner_set', to=settings.AUTH_USER_MODEL, verbose_name='document.owner'),
        ),
        migrations.AddField(
            model_name='document',
            name='responsible',
            field=models.ForeignKey(blank=True, db_column='id_responsible', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsible_set', to=settings.AUTH_USER_MODEL, verbose_name='document.responsible'),
        ),
        migrations.AddField(
            model_name='documentattachment',
            name='attachment',
            field=models.ForeignKey(db_column='id_attachment', null=True, on_delete=django.db.models.deletion.CASCADE, to='attachment.attachment'),
        ),
        migrations.AddField(
            model_name='documentattachment',
            name='created_by',
            field=models.ForeignKey(db_column='id_created_by', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentattachment',
            name='document',
            field=models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.CASCADE, related_name='attachment_set', to='document.document'),
        ),
        migrations.AddField(
            model_name='documentattachment',
            name='parent',
            field=models.ForeignKey(db_column='id_parent', null=True, on_delete=django.db.models.deletion.CASCADE, to='document.documentattachment'),
        ),
        migrations.AddField(
            model_name='document',
            name='attachments',
            field=models.ManyToManyField(through='document.DocumentAttachment', to='attachment.attachment'),
        ),
        migrations.AddField(
            model_name='documentattribute',
            name='parent',
            field=models.ForeignKey(blank=True, db_column='id_parent', null=True, on_delete=django.db.models.deletion.CASCADE, to='document.documentattribute'),
        ),
        migrations.AddField(
            model_name='documentnote',
            name='created_by',
            field=models.ForeignKey(db_column='id_created_by', on_delete=django.db.models.deletion.PROTECT, related_name='created_by_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentnote',
            name='document',
            field=models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.CASCADE, related_name='note_set', to='document.document'),
        ),
        migrations.AddField(
            model_name='documentnote',
            name='updated_by',
            field=models.ForeignKey(db_column='id_updated_by', on_delete=django.db.models.deletion.PROTECT, related_name='updated_by_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentreport',
            name='created_by',
            field=models.ForeignKey(db_column='id_created_by', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentreport',
            name='document',
            field=models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.CASCADE, to='document.document'),
        ),
        migrations.AddField(
            model_name='documentreport',
            name='report',
            field=models.ForeignKey(db_column='id_report', null=True, on_delete=django.db.models.deletion.CASCADE, to='report.report'),
        ),
        migrations.AddField(
            model_name='documentreport',
            name='template',
            field=models.ForeignKey(db_column='id_template', on_delete=django.db.models.deletion.CASCADE, to='report.reporttemplate'),
        ),
        migrations.AddField(
            model_name='documentscan',
            name='created_by',
            field=models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentscan',
            name='document',
            field=models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.CASCADE, related_name='scan_set', to='document.document'),
        ),
        migrations.AddField(
            model_name='documentstatuscourse',
            name='created_by',
            field=models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentstatuscourse',
            name='document',
            field=models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.CASCADE, to='document.document'),
        ),
        migrations.AddField(
            model_name='documentstatustrack',
            name='created_by',
            field=models.ForeignKey(db_column='id_created_by', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentstatustrack',
            name='document',
            field=models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.CASCADE, related_name='status_track', to='document.document'),
        ),
        migrations.AddField(
            model_name='documentnote',
            name='document_status_track',
            field=models.ForeignKey(blank=True, db_column='id_document_status_track', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='track_note_set', to='document.documentstatustrack'),
        ),
        migrations.AddField(
            model_name='documentsource',
            name='document_type',
            field=models.ForeignKey(db_column='id_document_type', on_delete=django.db.models.deletion.CASCADE, to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='document',
            name='type',
            field=models.ForeignKey(db_column='id_type', on_delete=django.db.models.deletion.CASCADE, related_name='document_type_set', to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttypeaccounting',
            name='document_type',
            field=models.ForeignKey(db_column='id_document_type', on_delete=django.db.models.deletion.CASCADE, to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttypeaccounting',
            name='accounting_type',
            field=models.ForeignKey(db_column='id_accounting_type', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypeaccountingtype'),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='accounting_order',
            field=models.ManyToManyField(through='document.DocumentTypeAccounting', to='document.documenttypeaccountingtype'),
        ),
        migrations.AddField(
            model_name='documenttypeassociate',
            name='document_type',
            field=models.ForeignKey(db_column='id_document_type', on_delete=django.db.models.deletion.CASCADE, to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttypeattribute',
            name='attribute',
            field=models.ForeignKey(blank=True, db_column='id_attribute', null=True, on_delete=django.db.models.deletion.CASCADE, to='attribute.attribute', verbose_name='document.type.attribute.attribute'),
        ),
        migrations.AddField(
            model_name='documenttypeattribute',
            name='dictionary',
            field=models.ForeignKey(blank=True, db_column='dictionary', null=True, on_delete=django.db.models.deletion.CASCADE, to='dict.dictionary', verbose_name='document.type.attribute.dictionary'),
        ),
        migrations.AddField(
            model_name='documenttypeattribute',
            name='document_type',
            field=models.ForeignKey(db_column='id_document_type', on_delete=django.db.models.deletion.CASCADE, related_name='attribute_set', to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttypeattribute',
            name='parent',
            field=models.ForeignKey(blank=True, db_column='id_parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_set', to='document.documenttypeattribute'),
        ),
        migrations.AddField(
            model_name='documentattribute',
            name='attribute',
            field=models.ForeignKey(db_column='id_attribute', on_delete=django.db.models.deletion.CASCADE, related_name='attribute_value_set', to='document.documenttypeattribute'),
        ),
        migrations.AddField(
            model_name='documenttypeattributefeature',
            name='attribute',
            field=models.ForeignKey(db_column='id_document_type_attribute', on_delete=django.db.models.deletion.CASCADE, related_name='feature_set', to='document.documenttypeattribute'),
        ),
        migrations.AddField(
            model_name='documenttypeattributemapping',
            name='attribute',
            field=models.ForeignKey(db_column='id_document_type_atribute', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mapping_set', to='document.documenttypeattribute'),
        ),
        migrations.AddField(
            model_name='documenttypeattributemapping',
            name='type',
            field=models.ForeignKey(db_column='id_type', on_delete=django.db.models.deletion.CASCADE, related_name='attribute_mapping_set', to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='category',
            field=models.ForeignKey(db_column='id_category', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypecategory', verbose_name='Kategoria'),
        ),
        migrations.AddField(
            model_name='documenttypereport',
            name='document_type',
            field=models.ForeignKey(db_column='id_document_type', on_delete=django.db.models.deletion.CASCADE, to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttypereport',
            name='template',
            field=models.ForeignKey(blank=True, db_column='id_template', null=True, on_delete=django.db.models.deletion.CASCADE, to='report.reporttemplate'),
        ),
        migrations.AddField(
            model_name='documenttypereportattributemapping',
            name='attribute',
            field=models.ForeignKey(db_column='id_attribute', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypeattribute'),
        ),
        migrations.AddField(
            model_name='documenttypereportattributemapping',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.documenttypereport'),
        ),
        migrations.AddField(
            model_name='documenttypesection',
            name='document_type',
            field=models.ForeignKey(db_column='id_document_type', on_delete=django.db.models.deletion.CASCADE, related_name='section_set', to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttypesection',
            name='parent',
            field=models.ForeignKey(blank=True, db_column='id_parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='document.documenttypesection'),
        ),
        migrations.AddField(
            model_name='documenttypesectioncolumn',
            name='section',
            field=models.ForeignKey(db_column='section_id', on_delete=django.db.models.deletion.CASCADE, related_name='column_set', to='document.documenttypesection'),
        ),
        migrations.AddField(
            model_name='documenttypesection',
            name='parent_column',
            field=models.ForeignKey(blank=True, db_column='id_parent_column', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='column_children', to='document.documenttypesectioncolumn'),
        ),
        migrations.AddField(
            model_name='documenttypestatus',
            name='type',
            field=models.ForeignKey(db_column='id_type', on_delete=django.db.models.deletion.CASCADE, related_name='status_set', to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='documenttypeprocessflow',
            name='available_status',
            field=models.ForeignKey(blank=True, db_column='id_available_status', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='available_status', to='document.documenttypestatus'),
        ),
        migrations.AddField(
            model_name='documenttypeprocessflow',
            name='status',
            field=models.ForeignKey(db_column='id_current_status', on_delete=django.db.models.deletion.CASCADE, related_name='status', to='document.documenttypestatus'),
        ),
        migrations.AddField(
            model_name='documenttypeattributefeature',
            name='status',
            field=models.ForeignKey(db_column='id_document_type_status', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypestatus'),
        ),
        migrations.AddField(
            model_name='documentstatustrack',
            name='status',
            field=models.ForeignKey(db_column='id_status', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypestatus'),
        ),
        migrations.AddField(
            model_name='documentstatuscourse',
            name='status',
            field=models.ForeignKey(db_column='id_status', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypestatus'),
        ),
        migrations.AddField(
            model_name='document',
            name='status',
            field=models.ForeignKey(blank=True, db_column='id_status', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypestatus', verbose_name='document.status'),
        ),
        migrations.AddField(
            model_name='documenttypestatusflow',
            name='hierarchy',
            field=models.ForeignKey(db_column='id_hierarchy', on_delete=django.db.models.deletion.CASCADE, to='hierarchy.hierarchy'),
        ),
        migrations.AddField(
            model_name='documenttypestatusflow',
            name='status',
            field=models.ForeignKey(db_column='id_status', on_delete=django.db.models.deletion.CASCADE, to='document.documenttypestatus'),
        ),
        migrations.AddField(
            model_name='documenttypeversiondefinition',
            name='document_type',
            field=models.ForeignKey(db_column='id_document_type', on_delete=django.db.models.deletion.CASCADE, related_name='definition_set', to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='annex',
            field=models.ForeignKey(blank=True, db_column='id_annex', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.document'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='annexed_by',
            field=models.ForeignKey(blank=True, db_column='id_annexed_by', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.document'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='id_created_by', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='document.created_by'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='hierarchy',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='hierarchy.hierarchy'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='owner',
            field=models.ForeignKey(blank=True, db_column='id_owner', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='document.owner'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='responsible',
            field=models.ForeignKey(blank=True, db_column='id_responsible', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='document.responsible'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='status',
            field=models.ForeignKey(blank=True, db_column='id_status', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.documenttypestatus', verbose_name='document.status'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='type',
            field=models.ForeignKey(blank=True, db_column='id_type', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.documenttype'),
        ),
        migrations.AddField(
            model_name='historicaldocumentattribute',
            name='attribute',
            field=models.ForeignKey(blank=True, db_column='id_attribute', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.documenttypeattribute'),
        ),
        migrations.AddField(
            model_name='historicaldocumentattribute',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldocumentattribute',
            name='parent',
            field=models.ForeignKey(blank=True, db_column='id_parent', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.documentattribute'),
        ),
        migrations.AddField(
            model_name='historicaldocumentnote',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='id_created_by', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldocumentnote',
            name='document',
            field=models.ForeignKey(blank=True, db_column='id_document', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.document'),
        ),
        migrations.AddField(
            model_name='historicaldocumentnote',
            name='document_status_track',
            field=models.ForeignKey(blank=True, db_column='id_document_status_track', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.documentstatustrack'),
        ),
        migrations.AddField(
            model_name='historicaldocumentnote',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldocumentnote',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='id_updated_by', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='documentsource',
            unique_together={('code', 'document_type')},
        ),
        migrations.AlterUniqueTogether(
            name='documenttypeaccounting',
            unique_together={('document_type', 'accounting_type')},
        ),
        migrations.AddConstraint(
            model_name='documenttypeattribute',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('container__isnull', True), ('parent__isnull', False)), ('parent__isnull', True), _connector='OR'), name='section_container_chk'),
        ),
        migrations.AddConstraint(
            model_name='documenttypeattribute',
            constraint=models.CheckConstraint(check=models.Q(('code__startswith', '__'), _negated=True), name='code_double_undsarscore_preventer_chk'),
        ),
        migrations.AlterUniqueTogether(
            name='documenttypeattribute',
            unique_together={('document_type', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='documentattribute',
            unique_together={('document_id', 'attribute', 'row_uid', 'row_sq')},
        ),
        migrations.AlterUniqueTogether(
            name='documenttypeattributemapping',
            unique_together={('type', 'attribute', 'mapped_name')},
        ),
        migrations.AlterUniqueTogether(
            name='documenttypesection',
            unique_together={('document_type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='documenttypeattributefeature',
            unique_together={('attribute', 'status')},
        ),
        migrations.AddConstraint(
            model_name='document',
            constraint=models.UniqueConstraint(fields=('type', 'code'), name='document_type_code_uq'),
        ),
        migrations.AddConstraint(
            model_name='document',
            constraint=models.UniqueConstraint(fields=('type', 'custom_code'), name='document_type_code_uq_1'),
        ),
    ]
