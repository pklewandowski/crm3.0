# Generated by Django 5.0.7 on 2024-07-27 12:46

import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSchedule',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='schedule.title')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(db_index=True, verbose_name='schedule.start_date')),
                ('end_date', models.DateTimeField(verbose_name='schedule.end_date')),
                ('participant_confirmed', models.BooleanField(default=False, verbose_name='schedule.participant_confirmed')),
                ('superior_confirmed', models.BooleanField(default=False, verbose_name='schedule.superior_confirmed')),
                ('host_user_confirmed', models.BooleanField(default=False, verbose_name='schedule.host_user_confirmed')),
                ('status', models.CharField(blank=True, default='NW', max_length=200, verbose_name='schedule.status')),
                ('is_private', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'schedule.history',
                'verbose_name_plural': 'historical schedules',
                'db_table': 'h_schedule',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScheduleCyclical',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='schedule.cyclical.title')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.TimeField(db_index=True, verbose_name='schedule.cyclical.start_time')),
                ('end_time', models.TimeField(verbose_name='schedule.cyclical.end_time')),
                ('start_date', models.DateField(verbose_name='schedule.cyclical.start_date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='schedule.cyclical.end_date')),
                ('days_of_month', models.JSONField(blank=True, null=True, verbose_name='schedule.cyclical.days_of_month')),
                ('days_of_week', models.JSONField(blank=True, null=True, verbose_name='schedule.cyclical.days_of_week')),
                ('repeat_period', models.CharField(max_length=50, verbose_name='schedule.cyclical.repeat_period')),
                ('status', models.CharField(blank=True, default='NW', max_length=200, verbose_name='schedule.cyclical.status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'schedule.cyclical.history',
                'verbose_name_plural': 'historical schedule cyclicals',
                'db_table': 'h_schedule_cyclical',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScheduleCyclicalUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('participant_type', models.CharField(max_length=1)),
                ('exclusive_participant_mode', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'schedule.history',
                'verbose_name_plural': 'historical schedule cyclical users',
                'db_table': 'h_schedule_cyclical_user',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScheduleUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('participant_type', models.CharField(default='U', max_length=1)),
                ('exclusive_participant_mode', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, max_length=500, null=True, verbose_name='schedule.user.token')),
                ('token_valid', models.BooleanField(default=False, verbose_name='schedule.user.token_valid')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'schedule.history',
                'verbose_name_plural': 'historical schedule users',
                'db_table': 'h_schedule_user',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='schedule.title')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(db_index=True, verbose_name='schedule.start_date')),
                ('end_date', models.DateTimeField(verbose_name='schedule.end_date')),
                ('participant_confirmed', models.BooleanField(default=False, verbose_name='schedule.participant_confirmed')),
                ('superior_confirmed', models.BooleanField(default=False, verbose_name='schedule.superior_confirmed')),
                ('host_user_confirmed', models.BooleanField(default=False, verbose_name='schedule.host_user_confirmed')),
                ('status', models.CharField(blank=True, default='NW', max_length=200, verbose_name='schedule.status')),
                ('is_private', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'schedule',
                'permissions': (('add:all', 'schedule.permissions.add.all'), ('add:own', 'schedule.permissions.add.own'), ('change:all', 'schedule.permissions.change.all'), ('change:own', 'schedule.permissions.change.own'), ('list:all', 'schedule.permissions.list.all'), ('list:own', 'schedule.permissions.list.own'), ('view:all', 'schedule.permissions.view.all'), ('view:own', 'schedule.permissions.view.own'), ('close:all', 'schedule.permissions.close.all'), ('close:own', 'schedule.permissions.close.own'), ('cancel:all', 'schedule.permissions.cancel.all'), ('cancel:own', 'schedule.permissions.cancel.own'), ('delete:all', 'schedule.permissions.delete:all'), ('delete:own', 'schedule.permissions.delete:own'), ('type:add', 'permissions.app.schedule.type.add'), ('client:add:all', 'permissions.app.schedule.client:add:all'), ('client:add:own', 'permissions.app.schedule.client:add:own')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ScheduleCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_default', models.BooleanField(default=False)),
                ('allowed_view_types', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'schedule_calendar',
            },
        ),
        migrations.CreateModel(
            name='ScheduleCalendarScheduleTypeM2M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'schedule_calendar_schedule_type_m2m',
            },
        ),
        migrations.CreateModel(
            name='ScheduleCyclical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='schedule.cyclical.title')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.TimeField(db_index=True, verbose_name='schedule.cyclical.start_time')),
                ('end_time', models.TimeField(verbose_name='schedule.cyclical.end_time')),
                ('start_date', models.DateField(verbose_name='schedule.cyclical.start_date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='schedule.cyclical.end_date')),
                ('days_of_month', models.JSONField(blank=True, null=True, verbose_name='schedule.cyclical.days_of_month')),
                ('days_of_week', models.JSONField(blank=True, null=True, verbose_name='schedule.cyclical.days_of_week')),
                ('repeat_period', models.CharField(max_length=50, verbose_name='schedule.cyclical.repeat_period')),
                ('status', models.CharField(blank=True, default='NW', max_length=200, verbose_name='schedule.cyclical.status')),
            ],
            options={
                'db_table': 'schedule_cyclical',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ScheduleCyclicalExclude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclude_date', models.DateField()),
            ],
            options={
                'db_table': 'schedule_cyclical_exclude',
            },
        ),
        migrations.CreateModel(
            name='ScheduleCyclicalUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_type', models.CharField(max_length=1)),
                ('exclusive_participant_mode', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'schedule_cyclical_user',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ScheduleNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='schedule.message.date_created')),
                ('text', models.TextField(verbose_name='schedule.message,text')),
            ],
            options={
                'db_table': 'schedule_note',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ScheduleTimeOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('off_date', models.DateField(verbose_name='schedule.time_off.off_date')),
                ('title', models.CharField(max_length=300, verbose_name='schedule.time_off.title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='schedule.time_off.description')),
            ],
            options={
                'db_table': 'schedule_time_off',
            },
        ),
        migrations.CreateModel(
            name='ScheduleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='schedule.type.name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='schedule.type.description')),
                ('work_break', models.BooleanField(default=False, verbose_name='schedule.type.work_break')),
                ('superior_confirmation', models.BooleanField(default=False, verbose_name='schedule.type.superior_confirmation')),
                ('participant_confirmation', models.BooleanField(default=False, verbose_name='schedule.type.participant_confirmation')),
                ('host_user_confirmation', models.BooleanField(default=False, verbose_name='schedule.type.host_user_confirmation')),
                ('host_user_editable', models.BooleanField(default=True, verbose_name='schedule.type.host_user_editable')),
                ('location_required', models.BooleanField(blank=True, default=False, verbose_name='schedule.type.location_required')),
                ('title_required', models.BooleanField(blank=True, default=False, verbose_name='schedule.type.title_required')),
                ('single_person', models.BooleanField(default=False, verbose_name='schedule.type.single_person')),
                ('whole_day_event', models.BooleanField(default=False, verbose_name='schedule.type.whole_day_event')),
                ('auto_close', models.BooleanField(default=False, verbose_name='schedule.type.auto_close')),
                ('min_time', models.PositiveIntegerField(blank=True, null=True, verbose_name='schedule.type.min_time')),
                ('max_time', models.PositiveIntegerField(blank=True, null=True, verbose_name='schedule.type.max_time')),
                ('min_host_break', models.PositiveIntegerField(blank=True, null=True, verbose_name='schedule.type.min_host_break')),
                ('min_participant_break', models.IntegerField(blank=True, null=True, verbose_name='schedule.type.min_participant_break')),
                ('event_kind', models.CharField(default='E', max_length=3, verbose_name='schedule.type.event_kind')),
                ('cyclic', models.BooleanField(default=False, verbose_name='schedule.type.cyclic')),
                ('default_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='schedule.type.default_title')),
                ('color', models.CharField(blank=True, max_length=7, null=True, verbose_name='schedule.type.color')),
                ('sq', models.IntegerField(default=0)),
                ('exclusive_participant_mode', models.BooleanField(default=False, verbose_name='schedule.type.exclusive_participant_mode')),
                ('is_default_event', models.BooleanField(default=False)),
                ('send_message', models.BooleanField(default=True, verbose_name='schedule.type.send_message')),
            ],
            options={
                'db_table': 'schedule_type',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ScheduleTypeReminder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(max_length=5, verbose_name='schedule.type.reminder.unit_number')),
                ('unit_type', models.CharField(max_length=3, verbose_name='schedule.type.reminder.unit_type')),
                ('type', models.CharField(max_length=3, verbose_name='schedule.type.reminder.type')),
            ],
            options={
                'db_table': 'schedule_type_reminder',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ScheduleUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('participant_type', models.CharField(default='U', max_length=1)),
                ('exclusive_participant_mode', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, max_length=500, null=True, verbose_name='schedule.user.token')),
                ('token_valid', models.BooleanField(default=False, verbose_name='schedule.user.token_valid')),
            ],
            options={
                'db_table': 'schedule_user',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='TempBanThaiSpaSent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'temp_banthaispa_sent',
                'default_permissions': (),
            },
        ),
    ]
